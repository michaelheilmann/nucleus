# AppVeyor configuration for AppVeyor project "Egoboo".
clone_depth: 1

# Build worker image (VM template)
image: Visual Studio 2017

branches:
  only:
    - master
    - develop

platform:
    - Win32
    - x64
configuration:
    - Debug
    - Release

install:
  # Initialize submodules. A depth of 32 should be enough.
  - git submodule update --init --recursive --depth 32
  # Download and install CMake.
  - set CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.0-win64-x64.zip"
  - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
  - 7z x cmake.zip -oC:\projects\deps > nul
  - move C:\projects\deps\cmake-* C:\projects\deps\cmake # Move to a version-agnostic directory
  - set PATH=C:\projects\deps\cmake\bin;%PATH%
  - cmake --version

    
# Package artifacts and push packaged artifacts.
#after_build:
#    - ps: |
        #./distribute -configuration ${env:configuration} -platform ${env:platform} -suffix ${env:suffix}
        #Push-AppveyorArtifact "${env:APPVEYOR_BUILD_FOLDER}/${env:artifactFileName}" -FileName "${env:artifactFileName}" -DeploymentName "${env:artifactName}"

# Restore nuget packages and install dependencies.        
# Furthermore, the artifact name and the artifact file name are computed.
before_build:
    #- nuget restore
    # Install CUnit.
    #- TODO.
    # Install Google test.
    - ps: .\ci\appveyor\install-googletest-vsix.ps1
    #- ps: |
        #$env:suffix = ""
        #$env:artifactName = "nucleus-$(${env:configuration}.ToLower())-$env:platform-$env:suffix"
        #Write-Host "artifact name = $env:artifactName"
        #$env:artifactFileName = "${env:artifactName}.zip"
        #Write-Host "artifact file name = $env:artifactFileName"
    - cmd: if "%platform%"=="Win32" set CMAKE_GENERATOR_NAME=Visual Studio 14 2015
    - cmd: if "%platform%"=="x64"   set CMAKE_GENERATOR_NAME=Visual Studio 14 2015 Win64
    - cmake -G "%CMAKE_GENERATOR_NAME%" CMakeLists.txt
build:
    parallel: true                  # enable MSBuild parallel builds
    project: nucleus.sln            # path to Visual Studio solution or project

test_script:
    - ps: |
        $platform = $env:platform
        if ($platform -eq "Win32") { $platform = "x86" }
        vstest.console /Logger:Appveyor /ListDiscoverers /UseVsixExtensions:true
        vstest.console /Logger:Appveyor /ListExecutors /UseVsixExtensions:true
        vstest.console /Logger:Appveyor /Platform:$platform /inIsolation /UseVsixExtensions:true "bin\$env:configuration\nucleus-test.exe"

# if one matrix entry fails, all entries fails
# https://www.appveyor.com/docs/build-configuration#failing-strategy
matrix:
    fast_finish: true
     
notifications:
    - provider: Webhook
      url: https://webhooks.gitter.im/e/7743b26cbf1767e7b3a3
      on_build_success: true
      on_build_failure: true
